package com.otv.model;

// default package
// Generated Jun 4, 2013 7:53:45 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TActor generated by hbm2java
 */
@Entity
@Table(name = "t_actor", schema = "public")
public class TActor implements java.io.Serializable {

	private int actrId;
	private TCode TCode;
	private String actrForename;
	private String actrMiddlename;
	private String actrSurname;
	private String actrUpdatedBy;
	private Date actrUpdatedOn;
	private Set<TPurchaseOrder> TPurchaseOrdersForPuorClientId = new HashSet<TPurchaseOrder>(
			0);
	private Set<TPurchaseOrder> TPurchaseOrdersForPuorVendorId = new HashSet<TPurchaseOrder>(
			0);
	private Set<TActorAddress> TActorAddresses = new HashSet<TActorAddress>(0);

	public TActor() {
	}

	public TActor(int actrId) {
		this.actrId = actrId;
	}

	public TActor(int actrId, TCode TCode, String actrForename,
			String actrMiddlename, String actrSurname, String actrUpdatedBy,
			Date actrUpdatedOn,
			Set<TPurchaseOrder> TPurchaseOrdersForPuorClientId,
			Set<TPurchaseOrder> TPurchaseOrdersForPuorVendorId,
			Set<TActorAddress> TActorAddresses) {
		this.actrId = actrId;
		this.TCode = TCode;
		this.actrForename = actrForename;
		this.actrMiddlename = actrMiddlename;
		this.actrSurname = actrSurname;
		this.actrUpdatedBy = actrUpdatedBy;
		this.actrUpdatedOn = actrUpdatedOn;
		this.TPurchaseOrdersForPuorClientId = TPurchaseOrdersForPuorClientId;
		this.TPurchaseOrdersForPuorVendorId = TPurchaseOrdersForPuorVendorId;
		this.TActorAddresses = TActorAddresses;
	}

	@Id
	@Column(name = "actr_id", unique = true, nullable = false)
	public int getActrId() {
		return this.actrId;
	}

	public void setActrId(int actrId) {
		this.actrId = actrId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "actr_type_code_id")
	public TCode getTCode() {
		return this.TCode;
	}

	public void setTCode(TCode TCode) {
		this.TCode = TCode;
	}

	@Column(name = "actr_forename", length = 100)
	public String getActrForename() {
		return this.actrForename;
	}

	public void setActrForename(String actrForename) {
		this.actrForename = actrForename;
	}

	@Column(name = "actr_middlename", length = 100)
	public String getActrMiddlename() {
		return this.actrMiddlename;
	}

	public void setActrMiddlename(String actrMiddlename) {
		this.actrMiddlename = actrMiddlename;
	}

	@Column(name = "actr_surname", length = 100)
	public String getActrSurname() {
		return this.actrSurname;
	}

	public void setActrSurname(String actrSurname) {
		this.actrSurname = actrSurname;
	}

	@Column(name = "actr_updated_by", length = 200)
	public String getActrUpdatedBy() {
		return this.actrUpdatedBy;
	}

	public void setActrUpdatedBy(String actrUpdatedBy) {
		this.actrUpdatedBy = actrUpdatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "actr_updated_on", length = 29)
	public Date getActrUpdatedOn() {
		return this.actrUpdatedOn;
	}

	public void setActrUpdatedOn(Date actrUpdatedOn) {
		this.actrUpdatedOn = actrUpdatedOn;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TActorByPuorClientId")
	public Set<TPurchaseOrder> getTPurchaseOrdersForPuorClientId() {
		return this.TPurchaseOrdersForPuorClientId;
	}

	public void setTPurchaseOrdersForPuorClientId(
			Set<TPurchaseOrder> TPurchaseOrdersForPuorClientId) {
		this.TPurchaseOrdersForPuorClientId = TPurchaseOrdersForPuorClientId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TActorByPuorVendorId")
	public Set<TPurchaseOrder> getTPurchaseOrdersForPuorVendorId() {
		return this.TPurchaseOrdersForPuorVendorId;
	}

	public void setTPurchaseOrdersForPuorVendorId(
			Set<TPurchaseOrder> TPurchaseOrdersForPuorVendorId) {
		this.TPurchaseOrdersForPuorVendorId = TPurchaseOrdersForPuorVendorId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TActor")
	public Set<TActorAddress> getTActorAddresses() {
		return this.TActorAddresses;
	}

	public void setTActorAddresses(Set<TActorAddress> TActorAddresses) {
		this.TActorAddresses = TActorAddresses;
	}

}
